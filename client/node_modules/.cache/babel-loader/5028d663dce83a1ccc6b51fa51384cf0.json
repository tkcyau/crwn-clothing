{"ast":null,"code":"var _jsxFileName = \"/Users/timothyyau/Desktop/crwn-clothing/crwn-clothing/client/src/components/stripe-button/stripe-button.component.js\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearCart\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_DfNH6VK7V422LC0Lh5NFDkxn00acN4P0b3\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(response => {\n      alert(\"Payment successful\");\n      clearCart();\n    }).catch(error => {\n      console.log(\"Payment error: \", error);\n      alert(\"There was an issue with your payment.  Please make sure to use accepted credit cards.\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.sv\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/timothyyau/Desktop/crwn-clothing/crwn-clothing/client/src/components/stripe-button/stripe-button.component.js"],"names":["React","StripeCheckout","connect","clearCart","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA;AAAT,CAAD,KAA0B;AACrD,QAAMI,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBN,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA,KAAK,EAAEA;AAFH;AAHF,KAAD,CAAL,CAQGK,IARH,CAQSC,QAAD,IAAc;AAClBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAd,MAAAA,SAAS;AACV,KAXH,EAYGe,KAZH,CAYUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACAF,MAAAA,KAAK,CACH,uFADG,CAAL;AAGD,KAjBH;AAkBD,GAnBD;;AAoBA,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,+BALR;AAME,IAAA,WAAW,EAAG,kBAAiBX,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAtCD;;AAwCA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,SAAS,EAAE,MAAMoB,QAAQ,CAACpB,SAAS,EAAV;AADe,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCjB,oBAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport { clearCart } from \"../../redux/cart/cart.actions\";\nimport axios from \"axios\";\nconst StripeCheckoutButton = ({ price, clearCart }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_DfNH6VK7V422LC0Lh5NFDkxn00acN4P0b3\";\n\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token: token,\n      },\n    })\n      .then((response) => {\n        alert(\"Payment successful\");\n        clearCart();\n      })\n      .catch((error) => {\n        console.log(\"Payment error: \", error);\n        alert(\n          \"There was an issue with your payment.  Please make sure to use accepted credit cards.\"\n        );\n      });\n  };\n  return (\n    <StripeCheckout\n      label=\"Pay now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.sv\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearCart: () => dispatch(clearCart()),\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\n"]},"metadata":{},"sourceType":"module"}