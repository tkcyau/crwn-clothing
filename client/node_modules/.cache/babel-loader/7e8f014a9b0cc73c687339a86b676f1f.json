{"ast":null,"code":"import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\";\nimport { getUserCartRef } from \"../../firebase/firebase.utils\";\nimport { setCartFromFirebase } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* checkCartFromFirebase({\n  payload: user\n}) {\n  const cartRef = yield getUserCartRef(user.id);\n  const cartSnapshot = yield cartRef.get();\n  yield put(setCartFromFirebase(cartSnapshot.data().cartItems));\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* onUserSignIn() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, checkCartFromFirebase);\n}\nexport function* onCartChange() {\n  yield takeLatest([CartActionTypes.ADD_ITEM, CartActionTypes.REMOVE_ITEM, CartActionTypes.CLEAR_ITEM_FROM_CART], updateCartInFirebase);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onUserSignIn)]);\n}","map":{"version":3,"sources":["/Users/timothyyau/Desktop/crwn-clothing/crwn-clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","takeLatest","call","put","UserActionTypes","clearCart","getUserCartRef","setCartFromFirebase","CartActionTypes","clearCartOnSignOut","checkCartFromFirebase","payload","user","cartRef","id","cartSnapshot","get","data","cartItems","onSignOutSuccess","SIGN_OUT_SUCCESS","onUserSignIn","SIGN_IN_SUCCESS","onCartChange","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","updateCartInFirebase","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMN,GAAG,CAACE,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUK,qBAAV,CAAgC;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAAhC,EAAmD;AACxD,QAAMC,OAAO,GAAG,MAAMP,cAAc,CAACM,IAAI,CAACE,EAAN,CAApC;AACA,QAAMC,YAAY,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA3B;AACA,QAAMb,GAAG,CAACI,mBAAmB,CAACQ,YAAY,CAACE,IAAb,GAAoBC,SAArB,CAApB,CAAT;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMlB,UAAU,CAACG,eAAe,CAACgB,gBAAjB,EAAmCX,kBAAnC,CAAhB;AACD;AAED,OAAO,UAAUY,YAAV,GAAyB;AAC9B,QAAMpB,UAAU,CAACG,eAAe,CAACkB,eAAjB,EAAkCZ,qBAAlC,CAAhB;AACD;AAED,OAAO,UAAUa,YAAV,GAAyB;AAC9B,QAAMtB,UAAU,CACd,CACEO,eAAe,CAACgB,QADlB,EAEEhB,eAAe,CAACiB,WAFlB,EAGEjB,eAAe,CAACkB,oBAHlB,CADc,EAMdC,oBANc,CAAhB;AAQD;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CAACE,IAAI,CAACiB,gBAAD,CAAL,EAAyBjB,IAAI,CAACmB,YAAD,CAA7B,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\";\nimport { getUserCartRef } from \"../../firebase/firebase.utils\";\nimport { setCartFromFirebase } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nexport function* checkCartFromFirebase({ payload: user }) {\n  const cartRef = yield getUserCartRef(user.id);\n  const cartSnapshot = yield cartRef.get();\n  yield put(setCartFromFirebase(cartSnapshot.data().cartItems));\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nexport function* onUserSignIn() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, checkCartFromFirebase);\n}\n\nexport function* onCartChange() {\n  yield takeLatest(\n    [\n      CartActionTypes.ADD_ITEM,\n      CartActionTypes.REMOVE_ITEM,\n      CartActionTypes.CLEAR_ITEM_FROM_CART,\n    ],\n    updateCartInFirebase\n  );\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onUserSignIn)]);\n}\n"]},"metadata":{},"sourceType":"module"}